import { useEffect, useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { BiChevronLeft, BiChevronDown } from "react-icons/all";
import Styles from "./NavItem.module.scss";

export default function NavItem({
  title,
  url = "./",
  subItem = [],
  Icon,
  active,
  isSideClose,
}) {
  const { pathname } = useLocation();
  const [showSubItems, setShowSubItems] = useState(false);

  useEffect(() => {
    if (active) {
      setShowSubItems(true);
    } else {
      setShowSubItems(false);
    }
  }, [pathname]);

  return (
    <li className={`${Styles.listItems} d-flex flex-wrap`}>
      <div
        className={`${Styles.sideMenu} ${active ? Styles.active : ""}
        ${subItem.length && showSubItems && active ? "mb-2" : ""}
        d-flex align-items-center py-2 px-3 d-flex fw-500 size-5 col-12`}
        onClick={() => setShowSubItems((prev) => !prev)}
      >

        {subItem.length ? (
          <span className="pointer d-flex align-items-center justify-content-between py-2  w-100">
            <span className="d-flex">
              <span className={`${Styles.icons}  center-content`}>
                <Icon />
              </span>
              {title}
            </span>
            <span className={`${showSubItems ? Styles.rotate : null}`}>
              <BiChevronLeft className="mr-2" size={20} />
            </span>
          </span>
        ) : (
          <Link className="d-flex py-2  w-100" to={url}>
            <span className={`${Styles.icons}  center-content`}>
              <Icon />
            </span>
            {title}
          </Link>
        )}
      </div>

      {subItem.length ? (
        <div
          className={`${Styles.subItem} ${showSubItems ? Styles.block : Styles.none
            }`}
        >
          {subItem.map((item) => (
            <div
              key={item.title}
              className={`${Styles.sideMenu}  
                 
                ${pathname.includes(item.url) ? Styles.active : ""}
                fw-500 py-2 col-12 ps-0 pointer`}
            >
              <Link
                className="nav-link-sub d-block size-5 px-2 w-100"
                to={item.url}
              >
                {item.title}
              </Link>
            </div>
          ))}
        </div>
      ) : null}
    </li>
  );
}

{
  /* <li className={`${Styles.ListItem}  ${active ? Styles.active : null} ${isSideClose ? Styles.isSideClose : null} fw-700`}>

{subItem && subItem.length ?
  <>

    {
      !isSideClose ?
        <div className="w-100 d-flex justify-content-between align-items-center">
          <span className="size-4  d-flex align-items-center">
            <span className="ml-2 d-flex align-items-center justify-content-center" ><Icon /></span>
            {title}
          </span>
          <span className="mr-2  d-flex align-items-center justify-content-center">
            <FiChevronDown size={18} />
          </span>
        </div>
        :
        <div className="w-100 d-flex justify-content-center align-items-center">
          <span className="d-flex align-items-center justify-content-center" title={title}><Icon /></span>
        </div>
    }
    {
      !isSideClose ?
        <ul className={`${Styles.subItem} mt-2`}>
          {subItem.map((item, index) => {
            return (
              <li
                className={`py-2 size-4  fw-500 `}
                key={index}
              >
                <Link to={item.url} className="d-flex align-items-center">
                  <span >{item.title}</span>
                </Link>
              </li>
            );
          })}
        </ul>
        :
        null
    }
  </>
  :
  <Link to={url} className={`${isSideClose ? "justify-content-center" : null} size-4  d-flex align-items-center w-100`}>

    {
      !isSideClose ?
        <>
          <span className="ml-2 d-flex align-items-center justify-content-center" ><Icon /></span>
          {title}
        </>
        :
        <span className="d-flex align-items-center justify-content-center" title={title} ><Icon /></span>
    }
  </Link>
}
</li> */
}
